/*
 * Copyright (c) 2008, 2014, Techworks Technologies Pvt Ltd and/or its affiliates 
 * henceforth referred to as Techworks. All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 *   - Redistributions of source code must retain the above copyright
 *     notice, this list of conditions and the following disclaimer.
 *
 *   - Redistributions in binary form must reproduce the above copyright
 *     notice, this list of conditions and the following disclaimer in the
 *     documentation and/or other materials provided with the distribution.
 *
 *   - Neither the name of Techworks or the names of its
 *     contributors may be used to endorse or promote products derived
 *     from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
 * IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
 * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */ 

subprojects {
    apply plugin: 'java'

    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8

    repositories {
        mavenCentral()
        mavenLocal()
    }
    dependencies {
        compile "org.slf4j:slf4j-api:[1.7,1.8)"
    }
}

allprojects {
    gradle.projectsEvaluated {
        tasks.withType(JavaCompile) {
            options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
        }
    }
}

project(':fxddp-gui') {
    
    ext.mainClass = 'com.cyberaka.fxddp.gui.RabbitsApplication'
    
    jar {
        manifest {
            attributes 'Main-Class': 'com.cyberaka.fxddp.gui.RabbitsApplication'
        }
        from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    }
    dependencies {
        compile project(':fxddp-common')
        compile project(':fxddp-net')
        compile "org.slf4j:slf4j-simple:[1.7,1.8)"
        compile 'com.google.guava:guava:10.0.1'
        compile 'com.google.inject:guice:3.0'
    }
}

project(':fxddp-net') {
    dependencies {
        compile project(':fxddp-common')
        compile 'io.advantageous.ddp:ddp-client:0.5.4'
        compile 'org.glassfish.tyrus:tyrus-client:1.3.3'
        compile 'org.glassfish.tyrus:tyrus-server:1.3.3'
        compile 'org.glassfish.tyrus:tyrus-container-grizzly:1.2.1'
        compile "org.slf4j:slf4j-simple:[1.7,1.8)"
        compile 'com.google.guava:guava:10.0.1'
        compile 'com.google.inject:guice:3.0'
    }
}

project(':fxddp-common') {
    dependencies {
        compile "org.slf4j:slf4j-simple:[1.7,1.8)"
    }
}
